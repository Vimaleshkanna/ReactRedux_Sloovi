{"version":3,"sources":["actions/types.js","actions/task.js","component/Bottom.js","component/TaskList.js","component/Task.js","component/Top.js","utils/setAuthToken.js","component/Dashboard.js","actions/auth.js","cred/cred.js","App.jsx","reducers/task.js","reducers/auth.js","reducers/index.js","store.js","index.js"],"names":["ADD_TASK","UPDATE_TASK","DELETE_TASK","CLEAR_TASK","GET_ACCESS","GET_ALL_TASK","GET_TASK","CLEAR_FIELD","clearTask","taskNumber","dispatch","a","type","payload","error","console","log","updateTask","id","config","headers","axios","put","localStorage","getItem","res","data","connect","state","task","isUpdate","auth","PropTypes","func","isRequired","addTask","taskData","currentDate","Date","assigned_user","task_date","task_time","parseInt","time_zone","getSeconds","task_msg","body","JSON","stringify","is_completed","post","deleteTask","delete","clearField","useState","taskDetails","setTaskDetails","isEmpty","setIsEmpty","setId","useEffect","tN","setTN","onChange","e","target","name","value","className","required","placeholder","list","onClick","preventDefault","getTask","get","style","display","color","backgroundColor","marginLeft","icon","faEdit","cursor","tasks","map","childToParent","isClicked","faPlus","setAuthToken","token","defaults","common","getAccess","email","password","getAllTask","setIsClicked","code","setItem","results","company_id","childData","App","exact","path","component","Dashboard","initialState","loading","combineReducers","action","length","Object","assign","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0a492b5.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\r\nexport const UPDATE_TASK = \"UPDATE_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const CLEAR_TASK = \"CLEAR_TASK\";\r\nexport const GET_ACCESS = \"GET_ACCESS\";\r\nexport const GET_ALL_TASK = \"GET_ALL_TASK\";\r\nexport const GET_TASK = \"GET_TASK\";\r\nexport const CLEAR_FIELD = \"CLEAR_FIELD\";\r\n","import axios from \"axios\";\r\nimport {\r\n  ADD_TASK,\r\n  CLEAR_TASK,\r\n  UPDATE_TASK,\r\n  DELETE_TASK,\r\n  GET_ALL_TASK,\r\n  GET_TASK,\r\n  CLEAR_FIELD,\r\n} from \"./types\";\r\n\r\nexport const addTask = (taskData, taskNumber) => async (dispatch) => {\r\n  const currentDate = new Date();\r\n  const assigned_user = taskData.assigned_user;\r\n  const task_date = taskData.task_date;\r\n  const task_time = parseInt(taskData.task_time) * (3600 / 1);\r\n  const time_zone = currentDate.getSeconds();\r\n  const task_msg = taskData.task_msg;\r\n  const is_completed = 1;\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({\r\n    assigned_user,\r\n    task_date,\r\n    task_time,\r\n    is_completed,\r\n    time_zone,\r\n    task_msg,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://stage.api.sloovi.com/task/lead_cb11a91b1bff4c42806b5c8dea51425d?company_id=${localStorage.getItem(\r\n        \"company_id\"\r\n      )}`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_TASK,\r\n      payload: res.data,\r\n      taskNumber: taskNumber,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getAllTask = () => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      `https://stage.api.sloovi.com/task/lead_cb11a91b1bff4c42806b5c8dea51425d?company_id=${localStorage.getItem(\r\n        \"company_id\"\r\n      )}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: GET_ALL_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getTask = (id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      `https://stage.api.sloovi.com/task/lead_cb11a91b1bff4c42806b5c8dea51425d/${id}?company_id=${localStorage.getItem(\r\n        \"company_id\"\r\n      )}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: GET_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const clearTask = (taskNumber) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CLEAR_TASK,\r\n      payload: {},\r\n      taskNumber: taskNumber,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateTask = (id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.put(\r\n      `https://stage.api.sloovi.com/task/lead_cb11a91b1bff4c42806b5c8dea51425d/${id}?company_id=${localStorage.getItem(\r\n        \"company_id\"\r\n      )}`,\r\n      config\r\n    );\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: UPDATE_TASK,\r\n      payload: res.data,\r\n      id: id,\r\n      // taskNumber: taskNumber,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteTask = (id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.delete(\r\n      `https://stage.api.sloovi.com/task/lead_cb11a91b1bff4c42806b5c8dea51425d/${id}?company_id=${localStorage.getItem(\r\n        \"company_id\"\r\n      )}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_TASK,\r\n      payload: res.data,\r\n      id: id,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const clearField = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CLEAR_FIELD,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./component.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  addTask,\r\n  clearField,\r\n  clearTask,\r\n  deleteTask,\r\n  updateTask,\r\n} from \"../actions/task\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBarsProgress } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Bottom = ({\r\n  addTask,\r\n  task,\r\n  clearTask,\r\n  isUpdate,\r\n  deleteTask,\r\n  auth,\r\n  taskNumber,\r\n  clearField,\r\n  updateTask,\r\n}) => {\r\n  const [taskDetails, setTaskDetails] = useState({\r\n    task_msg: \"\",\r\n    task_date: \"\",\r\n    task_time: \"\",\r\n    assigned_user: \"\",\r\n  });\r\n  const [isEmpty, setIsEmpty] = useState(true);\r\n  const [id, setId] = useState();\r\n  // if (isUpdate) {\r\n  //   clearField();\r\n  // }\r\n  useEffect(() => {\r\n    setId(task.id);\r\n    if (!isUpdate) {\r\n      clearTask(taskNumber);\r\n    } else {\r\n      clearField();\r\n    }\r\n  }, [isUpdate]);\r\n  const [tN, setTN] = useState(1);\r\n  const onChange = (e) => {\r\n    setTaskDetails({ ...taskDetails, [e.target.name]: e.target.value });\r\n    if (\r\n      taskDetails.assigned_user !== \"\" ||\r\n      taskDetails.task_msg !== \"\" ||\r\n      taskDetails.task_date !== \"\" ||\r\n      taskDetails.task_time !== \"\"\r\n    ) {\r\n      setIsEmpty(false);\r\n    }\r\n  };\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    setTN(tN + 1);\r\n    addTask(taskDetails, tN);\r\n  };\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    setTN(tN);\r\n    clearTask(tN);\r\n  };\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    deleteTask(id);\r\n  };\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    //alert(id);\r\n    updateTask(id);\r\n  };\r\n  return (\r\n    <div className=\"bottom\">\r\n      <div className=\"container\">\r\n        <form>\r\n          <div className=\"row\">\r\n            <div className=\"description\">\r\n              <p className=\"title col-sm-12\">Task Description</p>\r\n              <input\r\n                className=\"col-sm-12 text\"\r\n                type=\"text\"\r\n                name=\"task_msg\"\r\n                value={task.task_msg}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              {/* {\" \"}\r\n              <span>\r\n                <FontAwesomeIcon icon={faBarsProgress} />{\" \"}\r\n              </span> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"date col-sm-6\">\r\n              <p className=\"title\">Date</p>\r\n              <div className=\"md-form md-outline input-with-post-icon datepicker\">\r\n                <input\r\n                  name=\"task_date\"\r\n                  placeholder=\"Select date\"\r\n                  type=\"date\"\r\n                  id=\"example\"\r\n                  className=\"form-control\"\r\n                  value={task.task_date}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"date col-sm-6\">\r\n              <p className=\"title\">Time</p>\r\n              <input\r\n                list=\"times\"\r\n                type=\"text\"\r\n                className=\"time\"\r\n                name=\"task_time\"\r\n                onChange={(e) => onChange(e)}\r\n                value={task.task_time}\r\n                required\r\n              />\r\n              <datalist id=\"times\">\r\n                <option value=\"12 A.M\" />\r\n                <option value=\"01 A.M\" />\r\n                <option value=\"02 A.M\" />\r\n                <option value=\"03 A.M\" />\r\n                <option value=\"04 A.M\" />\r\n                <option value=\"05 A.M\" />\r\n                <option value=\"06 A.M\" />\r\n                <option value=\"07 A.M\" />\r\n                <option value=\"08 A.M\" />\r\n                <option value=\"09 A.M\" />\r\n                <option value=\"10 A.M\" />\r\n                <option value=\"11 A.M\" />\r\n                <option value=\"12 P.M\" />\r\n                <option value=\"01 P.M\" />\r\n                <option value=\"02 P.M\" />\r\n                <option value=\"03 P.M\" />\r\n                <option value=\"04 P.M\" />\r\n                <option value=\"05 P.M\" />\r\n                <option value=\"06 P.M\" />\r\n                <option value=\"07 P.M\" />\r\n                <option value=\"08 P.M\" />\r\n                <option value=\"09 P.M\" />\r\n                <option value=\"10 P.M\" />\r\n                <option value=\"11 P.M\" />\r\n              </datalist>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"user\">\r\n              <p className=\"title col-sm-12\">Assign User</p>\r\n              <input\r\n                className=\"col-sm-12 text\"\r\n                type=\"text\"\r\n                name=\"assigned_user\"\r\n                value={task.assigned_user}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          {isUpdate && (\r\n            <button className=\"btn btn-danger\" onClick={handleDelete}>\r\n              Delete\r\n            </button>\r\n          )}\r\n          <div className=\"row\">\r\n            <div className=\"button\">\r\n              {isUpdate ? (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={handleEdit}\r\n                >\r\n                  Save\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              )}\r\n              {isUpdate ? null : (\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success ${\r\n                    isEmpty ? \"d-none\" : \"d-block\"\r\n                  }`}\r\n                  onClick={handleSave}\r\n                >\r\n                  Save\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBottom.propTypes = {\r\n  addTask: PropTypes.func.isRequired,\r\n  clearTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired,\r\n  task: PropTypes.object.isRequired,\r\n  isUpdate: PropTypes.bool,\r\n  auth: PropTypes.object.isRequired,\r\n  clearField: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  task: state.task.task,\r\n  isUpdate: state.task.isUpdate,\r\n  taskNumber: state.task.taskNumber,\r\n  auth: state.auth,\r\n  updateTask: PropTypes.func.isRequired,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  addTask,\r\n  clearTask,\r\n  deleteTask,\r\n  clearField,\r\n  updateTask,\r\n})(Bottom);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./component.css\";\r\nimport Bottom from \"./Bottom\";\r\nimport { getTask, updateTask } from \"../actions/task\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nconst TaskList = ({ task, taskNumber, updateTask, getTask }) => {\r\n  //const [edit, setEdit] = useEffect(false);\r\n\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    // setEdit(!edit);\r\n    //localStorage.setItem(\"taskId\", task.id);\r\n    getTask(task.id);\r\n  };\r\n  return (\r\n    <div className=\"taskList\">\r\n      <div className=\"card w-100\">\r\n        <div\r\n          className=\"card-body \"\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"forestgreen\",\r\n            backgroundColor: \"antiquewhite\",\r\n          }}\r\n        >\r\n          <h5>{task.task_msg}</h5>\r\n\r\n          {/* <input\r\n            type=\"button\"\r\n            value=\"Edit\"\r\n            style={{ marginLeft: \"auto\",cursor:\"pointer\" }}\r\n            onClick={handleEdit}\r\n          /> */}\r\n          <div style={{ marginLeft: \"auto\" }}>\r\n            <FontAwesomeIcon\r\n              icon={faEdit}\r\n              style={{ cursor: \"pointer\", color: \"black\" }}\r\n              onClick={handleEdit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  updateTask: PropTypes.func.isRequired,\r\n  getTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { updateTask, getTask })(TaskList);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nconst Task = ({ tasks, taskNumber }) => {\r\n  return (\r\n    <div className=\"task\">\r\n      {tasks.map((task) => {\r\n        return <TaskList task={task} taskNumber={taskNumber} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tasks: state.task.tasks,\r\n  taskNumber: state.task.taskNumber,\r\n});\r\nexport default connect(mapStateToProps)(Task);\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./component.css\";\r\nimport { connect } from \"react-redux\";\r\nconst Top = ({ childToParent, isClicked, taskNumber }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <section>Tasks {taskNumber}</section>\r\n      <div className=\"plus\">\r\n        <FontAwesomeIcon\r\n          style={{ cursor: \"pointer\" }}\r\n          icon={faPlus}\r\n          onClick={(e) => {\r\n            childToParent(!isClicked);\r\n          }}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  taskNumber: state.task.taskNumber,\r\n});\r\nexport default connect(mapStateToProps)(Top);\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\r\n  } else {\r\n    delete axios.defaults.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAccess } from \"../actions/auth\";\r\nimport Bottom from \"./Bottom\";\r\nimport \"./component.css\";\r\nimport Task from \"./Task\";\r\nimport Top from \"./Top\";\r\nimport PropTypes from \"prop-types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { clearTask, getAllTask } from \"../actions/task\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\nconst Dashboard = ({\r\n  taskNumber,\r\n  isUpdate,\r\n  getAccess,\r\n  auth,\r\n  getAllTask,\r\n  clearTask,\r\n}) => {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const childToParent = (childData) => {\r\n    setIsClicked(childData);\r\n    clearTask(taskNumber);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAccess();\r\n    //alert(auth.code);\r\n    if (auth.code === 200) {\r\n      localStorage.setItem(\"token\", auth.results.token);\r\n      localStorage.setItem(\"company_id\", auth.results.company_id);\r\n    }\r\n    getAllTask();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`dashboard`}>\r\n      <Top childToParent={childToParent} isClicked={isClicked} />\r\n\r\n      {isClicked || isUpdate ? <Bottom /> : <Task />}\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getAccess: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  getAllTask: PropTypes.func.isRequired,\r\n  clearTask: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isUpdate: state.task.isUpdate,\r\n  taskNumber: state.task.taskNumber,\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { getAccess, getAllTask, clearTask })(\r\n  Dashboard\r\n);\r\n","import axios from \"axios\";\r\nimport { GET_ACCESS } from \"./types\";\r\nimport { EMAIL, PASSWORD } from \"../cred/cred\";\r\nexport const getAccess = () => async (dispatch) => {\r\n  const email = EMAIL;\r\n  const password = PASSWORD;\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post(\r\n      \"https://stage.api.sloovi.com/login\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: GET_ACCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// export const loadUser = () => async dispatch =>{\r\n//     if(localStorage.token){\r\n//         setAuthToken(localStorage.token);\r\n//     }\r\n\r\n//     try {\r\n//         const res = await axios.get(`https://stage.api.sloovi.com/team?product=outreach&company_id=${}`);\r\n//         dispatch({\r\n//             type:USER_LOADED,\r\n//             payload:res.data\r\n//         });\r\n//     } catch (err) {\r\n//         dispatch({\r\n//             type:AUTH_ERROR\r\n//         })\r\n//     }\r\n// }\r\n","export const EMAIL = \"smithwills1989@gmail.com\";\r\nexport const PASSWORD = \"12345678\";\r\n","import { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Dashboard from \"./component/Dashboard\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  ADD_TASK,\r\n  CLEAR_FIELD,\r\n  CLEAR_TASK,\r\n  DELETE_TASK,\r\n  GET_ALL_TASK,\r\n  GET_TASK,\r\n  UPDATE_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  task: {},\r\n  tasks: [],\r\n  taskNumber: 0,\r\n  loading: true,\r\n  isUpdate: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload, taskNumber, id } = action;\r\n  // const task_msg = payload.results.task_msg;\r\n  // const task_date = payload.results.task_date;\r\n  // const task_time = payload.results.task_time;\r\n  // const assigned_user = payload.results.assigned_user;\r\n\r\n  // const required_task = { task_msg, task_date, task_time, assigned_user };\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return {\r\n        ...state,\r\n        task: payload.results,\r\n        tasks: [...state.tasks, payload.results],\r\n        taskNumber: state.tasks.length,\r\n        loading: false,\r\n        isUpdate: false,\r\n      };\r\n    case GET_ALL_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, Object.assign(...payload.results)],\r\n        loading: false,\r\n        isUpdate: false,\r\n        taskNumber: state.tasks.length,\r\n      };\r\n    case GET_TASK:\r\n      return {\r\n        ...state,\r\n        task: payload.results,\r\n        isUpdate: !state.isUpdate,\r\n        taskNumber: state.tasks.length,\r\n      };\r\n    case CLEAR_TASK:\r\n      return {\r\n        ...state,\r\n        task: {},\r\n        tasks: [...state.tasks],\r\n        taskNumber: state.tasks.length,\r\n        loading: true,\r\n        isUpdate: false,\r\n      };\r\n    case CLEAR_FIELD:\r\n      return {\r\n        ...state,\r\n        task: {},\r\n        tasks: [...state.tasks],\r\n        isUpdate: true,\r\n        taskNumber: state.tasks.length,\r\n      };\r\n    case UPDATE_TASK:\r\n      return {\r\n        ...state,\r\n        task: payload,\r\n        tasks: state.tasks.map((task) =>\r\n          task.id === id ? { ...task, task: payload } : task\r\n        ),\r\n        isUpdate: !state.isUpdate,\r\n        loading: false,\r\n        taskNumber: state.tasks.length,\r\n      };\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        task: payload,\r\n        tasks: state.tasks.filter((task) => task.id !== id),\r\n        isUpdate: false,\r\n        loading: false,\r\n        taskNumber: state.tasks.length,\r\n      };\r\n    default:\r\n      return { ...state, taskNumber: state.tasks.length };\r\n  }\r\n}\r\n","import { GET_ACCESS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_ACCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport taskReducer from \"./task\";\r\nimport authReducer from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  task: taskReducer,\r\n  auth: authReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}